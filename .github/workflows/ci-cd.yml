name: CI/CD Pipeline   #Nom du workflow

on:                    #exécute automatiquement à chaque git push sur la branche main
  push:
    branches: [ main ]

env:
  ACR_NAME: acrregistrybriac
  IMAGE_NAME: fastapi-app

jobs:                  #Nom du job principal : build-and-deploy 
  build-and-deploy:    #exécuté sur une machine virtuelle Ubuntu fournie par GitHub
    runs-on: ubuntu-latest

    steps:             #Récupération du code source du dépôt dans l'environnement GitHub Actions
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python   # Installation de Python 3.11 pour exécution des tests et scripts
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies    #Installation des dépendances Python 
      run: |
        pip install -r requirements.txt

    - name: Set PYTHONPATH    #Ajout du dossier courant au PYTHONPATH pour que les imports fonctionnent bien lors des tests 
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

    - name: Run tests         #Exécution des tests unitaires avec pytest, dans le dossier test/
      run: |
        pytest test/

    - name: Login to Azure       #Connexion à Azure  
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Docker login to ACR
      run: |
        az acr login --name $ACR_NAME

    - name: Set image tag from commit SHA
      id: vars
      run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build Docker image with commit SHA tag 
      run: |
        docker build -t $ACR_NAME.azurecr.io/fastapi-app:${TAG} .

    - name: Push Docker image to ACR
      run: |
        docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${TAG}

    - name: Deploy to Azure Web App   # Déploiement automatique de l'image Docker fastapi-app sur une Azure Web App for Containers nommée "AppTraining"
      uses: azure/webapps-deploy@v2
      with:
        app-name: "AppTraining"
        images: acrregistrybriac.azurecr.io/fastapi-app:v1